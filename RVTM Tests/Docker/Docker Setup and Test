### Perquisites

Make sure Linux, Apache, MySQL, and PHP (LAMP) are set up correctly.

### Installing Apache and Configuring the Firewall

Update Linux:

sudo apt update

Install Apache:

sudo apt install apache2

Adjust Firewall to allow for Apache. 

ufw status 

Turn on the firewall if not done so already.

ufw enable

Check to make sure the app list shows in ufw

sudo ufw app list

Apache: This profile opens only port 80 (normal, unencrypted web traffic). 

Apache Full: This profile opens both port 80 (normal, unencrypted web traffic) and port 443 (TLS/SSL encrypted traffic). 

Apache Secure: This profile opens only port 443 (TLS/SSL encrypted traffic)

Allow Regular Apache Profile for now:

sudo ufw allow in "Apache"

![apache](https://user-images.githubusercontent.com/71106886/165633590-08f3b3d9-b316-4736-8a18-464d479a27cc.png)

Verify the change:

sudo ufw status

Go to the Apache Server and you will see the example Apache Web Page.

http://your_system’s_ip

To Find your Server’s Public IP Address Type:

ip addr show eth0 | grep inet | awk '{ print $2; }' | sed 's/\/.*$//'

Change eth0 with whatever adapter you are using. (use “ip a” to find that out)

### Next move on to installing MySQL Server.

sudo apt install mysql-server

Run the secure installation:

sudo mysql_secure_installation

Read the requirements and enter Y.
 
Enter the console with:

sudo mysql

Exit the console with:

exit

### Install PHP

Install the packages:

sudo apt install php libapache2-mod-php php-mysql

Get the version:

php -v

![php](https://user-images.githubusercontent.com/71106886/165633567-39263ed7-70af-4e4c-9fd3-1eb74c4cfd83.png)

### Install Docker Engine

Setup repository:

sudo apt-get update
sudo apt-get install \ ca-certificates \ curl \ gnupg \ lsb-release

Add Docker’s Official GPG key:

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

Install Docker Engine:

sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin

Start and enable Docker Service:

sudo systemctl start docker.service
sudo systemctl enable docker.service

Create Docker Group:

Sudo groupadd docker

Add User to Docker Group

Sudo usermod -aG docker $USER

Verify Docker works with hello world image:

docker run hello-world

Log into the docker user and install docker compose

DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker} 

mkdir -p DOCKER_CONFIG/cli-plugins 

curl -SL https://github.com/docker/compose/releases/download/v2.4.1/docker-compose-linux-x86_64 -o DOCKER_CONFIG/cli-plugins/docker-compose

Note: This installs docker compose only for the current user home directory.

Add executable permissions:

chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose

Check version:

Docker compose version

Open GitHub and locate our wiki.js docker compose example file we used from the official wiki.js documentation. 

Update Firewall to have port 8080tcp and 3000/tcp

ufw allow in 8080/tcp and ufw allow in 3000/tcp

Run docker compose up in the directory the docker-compose.yaml file is located

Verify:

docker ps

You should see your two containers.

Enter ip address:8080 and complete the setup.
\
Once completed you can see your docker wiki application. Ours is located below:

![docker wiki](https://user-images.githubusercontent.com/71106886/165633626-74cf6ed1-e7cd-4e43-9b07-f933642968c3.png)

